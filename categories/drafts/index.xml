<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on wPv的个人小站</title>
    <link>https://wpv-chan.github.io/categories/drafts/</link>
    <description>Recent content in Drafts on wPv的个人小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wpv-chan.github.io/categories/drafts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LFU内存淘汰算法的简单实现</title>
      <link>https://wpv-chan.github.io/p/lfu%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AE%97%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wpv-chan.github.io/p/lfu%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AE%97%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</guid>
      <description>LFU: Least Frequently Used  class LFUCLass { // mapping from key to val, KV chart  HashMap&amp;lt;Integer, Interger&amp;gt; keyToVal; // mapping from key to freq, KF chart  HashMap&amp;lt;Integer, Interger&amp;gt; keyToFreq; // mapping from freq to key, FK chart  HashMap&amp;lt;Integer, Interger&amp;gt; freqToKeys; // logging the least freq  int minFreq; // logging the largest col of LFU cache  int cap; public LFUCache(int capacity) { keyToVal = new HashMap&amp;lt;&amp;gt;(); keyToFreq = new HashMap&amp;lt;&amp;gt;(); freqToKeys = new HashMap&amp;lt;&amp;gt;(); this.</description>
    </item>
    
  </channel>
</rss>
